name: Deploy to Azure 🚀🌤️

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  terraform:
    runs-on: ubuntu-latest

    env:
      SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: "Az CLI login"
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: "Run Azure CLI commands"
        run: |
          az account show
          az group list
          pwd

      - name: Debug GitHub context
        run: echo "${{ toJson(github) }}"

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.1.0

      - name: Check if Azure Storage Account exists
        run: |
          TIMESTAMP=$(date +%s)
          NEW_STORAGE_ACCOUNT_NAME=tfstatexpemrj$((TIMESTAMP % 9999999)) # Unique name using timestamp modulo
          if az storage account show --name $NEW_STORAGE_ACCOUNT_NAME --resource-group myxpeResourceGroup &> /dev/null
          then
            echo "Storage Account already exists"
          else
            echo "Storage Account does not exist, creating..."
            az storage account create --name $NEW_STORAGE_ACCOUNT_NAME --resource-group myxpeResourceGroup --sku Standard_LRS --location EastUS
          fi

      - name: Set up Terraform
        run: |
          terraform -v
          terraform init -backend-config="resource_group_name=myxpeResourceGroup" \
                          -backend-config="storage_account_name=tfstatestorageaccount" \
                          -backend-config="container_name=tfstatecontainer" \
                          -backend-config="key=terraform.tfstate" \
                          -backend-config="use_oidc=true" \
                          -backend-config="subscription_id=${SUBSCRIPTION_ID}" \
                          -backend-config="tenant_id=${TENANT_ID}" \
                          -backend-config="client_id=${CLIENT_ID}"

      #- name: Terraform Plan
      #  run: terraform plan -out=tfplan

      #- name: Apply Terraform
      #  run: terraform apply -auto-approve

      - name: Clean up
        run: terraform destroy -auto-approve
